{"version":3,"sources":["responsive.js","lib/api.ts","feature/productSlice.ts","feature/buttonSlice.ts","util/Button.tsx","components/HomePage.styles.tsx","components/HomePage.tsx","components/ProductDetail.styles.tsx","components/ProductDetail.tsx","components/Header.styles.tsx","components/Header.tsx","components/Form.styles.tsx","components/Form.tsx","global.styles.js","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["props","BASE_URL","getProducts","a","fetch","then","res","json","catch","error","console","log","createProduct","product","method","headers","body","JSON","stringify","id","crypto","getRandomValues","Uint8Array","toString","replace","substr","updateProduct","deleteProduct","ProductSlice","createSlice","name","initialState","item","reducers","InjectProducts","state","action","payload","forEach","push","AddProduct","UpdateProduct","index","DeleteProduct","splice","actions","ButtonSlice","toggle","save","edit","toggleSaveButton","toggleEditButton","Button","padding","size","styled","button","GridContainer","div","FlexContainer","TextMDiv","BigWhiteDiv","LinkTag","Link","Title","span","h3","I","i","InnerDiv","FlexDiv","Fab","HomePage","products","onAddToCart","search","productsSelector","useSelector","dispatch","useDispatch","history","useHistory","filteredProducts","useMemo","filter","title","includes","description","toLocaleLowerCase","HPButton","map","to","src","image","alt","data-testid","category","price","toLocaleString","style","currency","onClick","evt","preventDefault","className","c","MainDiv","GridDiv","FlexCart","InnerFlexDiv","Img","img","ProductDetail","useParams","find","p","parseInt","useState","isDisabled","PDButton","disabled","pathname","type","HeaderContainer","gridTemplateColumns","flexGrow","fontWeight","paddingTeft","paddingTop","fontSize","css","ItemCountContainer0","ItemCountContainer1","NotificationsSpan","itemCount","children","SearchContainer","TooltipSpan","TooltipDiv","Div","Input","input","Header","cart","onClearCart","onSetSearch","total","reduce","Number","inputRef","useRef","useEffect","current","focus","CartButton","length","ref","placeholder","value","onChange","target","MainContainerForm","form","FormBoxDiv","Error","TextArea","textarea","Form","useLocation","split","initialData","uuid","buttonReducer","errorMessage","setErrorMessage","data","setData","handleInputChange","e","onSubmit","tag","setTimeout","handeleAdd","handeleUpdate","handeleDelete","FormButton","data-tooltip","htmlFor","display","GlobalStyle","createGlobalStyle","App","useLocalStorage","setCart","setProducts","result","seeds","gproducts","fetchData","useCallback","location","setSearch","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","productReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.febf4392.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nexport const mobile = (props) => {\n  return css`\n    @media only screen and (max-width: 800px) {\n      ${props}\n    }\n  `;\n};\n","import type { Product } from \"../product\";\nconst BASE_URL = \"http://localhost:8080/api/product\";\nexport const getProducts = async (): Promise<Product[]> =>\n  fetch(`${BASE_URL}s`).then((res) => res.json()).catch(function(error) {\n    console.log(error);\n});;\n  let uuid = () => {\n    return (crypto.getRandomValues(new Uint8Array(8))).toString().replace(/,/g, '').substr(1,16);\n  \n  }\nexport const createProduct = async (product: Product): Promise<Product> =>\n  fetch(`${BASE_URL}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({...product, id: uuid()\n    }),\n  }).then((res) => res.json());\n\nexport const updateProduct = async (product: Product): Promise<Product> =>\n  fetch(`${BASE_URL}/${product.id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(product),\n  }).then((res) => res.json());\n\nexport const deleteProduct = async (product: Product): Promise<Product> =>\n  fetch(`${BASE_URL}/${product.id}`, {\n    method: \"DELETE\",\n  }).then(() => product);\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { updateProduct, deleteProduct, createProduct } from \"../lib/api\";\nimport type { Product } from \"../product\";\n\nexport interface ProductState {\n  item: Product[];\n}\n\nconst initialState: ProductState = {\n  item: [],\n};\n\nexport const ProductSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    InjectProducts: (state, action: PayloadAction<Product[]>) => {\n      action.payload.forEach((item)=>{\n        state.item.push(item);\n      })\n    },\n    AddProduct: (state, action: PayloadAction<Product>) => {\n      state.item.push(action.payload);\n      createProduct(action.payload)\n    },\n    UpdateProduct: (state, action: PayloadAction<Product>) => {\n      state.item.forEach( (item, index) => {\n        if(item.id === action.payload.id){ \n          state.item[index] = {...item, ...action.payload};\n          updateProduct(action.payload)\n        }\n      })\n    },\n    DeleteProduct: (state, action: PayloadAction<Product>) => {\n      state.item.forEach( (item, index) => {\n        if(item.id === action.payload.id) {\n          state.item.splice(index,1);\n          deleteProduct(action.payload)\n        }\n      })\n    },\n  },\n});\n\nexport const { AddProduct, DeleteProduct, UpdateProduct, InjectProducts } = ProductSlice.actions;\n\nexport default ProductSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface ButtonToggle {\n  save: boolean,\n  edit: boolean\n}\n\nexport interface ButtonState {\n  toggle: ButtonToggle;\n}\n\n\nconst initialState: ButtonState = {\n  toggle: {save: true, edit: true},\n};\n\nexport const ButtonSlice = createSlice({\n  name: \"button\",\n  initialState,\n  reducers: {\n    toggleSaveButton: (state, action: PayloadAction<boolean>) => {\n      state.toggle[\"save\"]=(action.payload);\n      state.toggle[\"edit\"]=(!action.payload);\n    },\n    toggleEditButton: (state, action: PayloadAction<boolean>) => {\n      state.toggle[\"edit\"]=(action.payload);\n      state.toggle[\"save\"]=(!action.payload);\n    },\n  },\n});\n\nexport const { toggleSaveButton, toggleEditButton } = ButtonSlice.actions;\n\nexport default ButtonSlice.reducer;\n","import React, { HTMLAttributes, StyleHTMLAttributes } from \"react\";\nimport styled from 'styled-components';\n\nexport const Button = ({padding, size}: any) => {\n    return styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1em auto;\n    padding: ${ padding};\n    font-size: ${ size};\n    border-radius: 10px;\n    &:hover{\n        background-color: rgb(56, 54, 54);\n        color: yellow;\n        cursor: pointer;\n}\n`;\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GridContainer = styled.div`\n        border-width: 0;\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\n            grid-gap: 1rem;\n            align-content:space-between;\n            justify-content: space-around;\n            img {\n                max-width: 60%;\n                height: 322px;\n                display: flex;\n                vertical-align: middle;\n                max-height: 60%;\n            }\n        `;\n\nexport const FlexContainer = styled.div`\n            display: flex;\n            align-content: center;\n            flex-wrap: wrap;\n            justify-content: center;\n            align-items: center;\n            margin-top: 1rem;\n        `;\n\nexport const TextMDiv = styled.div`\n            font-size: 1rem;\n            line-height: 1rem;\n            margin-top: 0.25rem;\n    `;\n\nexport const BigWhiteDiv = styled.div`\n            --darkreader-bg--tw-bg-opacity: 1;\n            background-color: var(--cart-background);\n            padding: 0.75rem;\n        `;\n\nexport const LinkTag = styled(Link)`\n            display: flex;\n            flex-direction: column;\n            align-content: center;\n            justify-content: space-between;\n            --darkreader-border--tw-border-opacity: 1;\n            border-color: rgb(225, 235, 227);\n            border-width: 1px;\n            --tw-bg-opacity: 1;\n            background-color:var(--cart-background);\n            border-top-left-radius: 0.5rem;\n            border-top-right-radius: 0.5rem;\n            `;\n\n        export const NotificationsSpan = styled.span`\n            width: 2rem;\n            height: 2rem;\n            border: 6px rgb(235, 219, 50) solid;\n            border-radius: 50%;\n            background-color: #212724;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            position: relative;\n        \n`;\n\n\nexport const Title = styled.h3`\n    font-weight: bold;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    flex-grow: max(0.8);    \n    margin-top: 1rem;  \n    margin-left: 1rem; \n\n`;\n\n\nexport const I = styled.i`\n    margin-right: 0.5rem;\n`;\n\n    \n\nexport const InnerDiv = styled.div`\n    font-size: 1.125rem;\n    line-height: 1.75rem;\n    text-align: right;\n    flex-grow: max(0.8);\n    justify-content: flex-end;\n    font-weight: 700;\n    margin-right: 1rem;\n    margin-top: 0.25rem;\n`;\n\nexport const FlexDiv = styled.div`\n    justify-content: center;\n    display: flex;\n    align-items: baseline;\n    margin-top: auto;\n    flex-flow: wrap;\n    width: 100%;\n`;\n\nexport const Fab = styled.div`\n    /* background: url(./plus-4.svg); */\n    background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/179202/plus.svg);\n    background-repeat: no-repeat;\n    background-color: hsl(159, 55%, 77%);\n    background-position: center center;\n    background-size: 50% 50%;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    position: fixed;\n    bottom: 2rem;\n    right: 2rem;\n    box-shadow: 2px 2px 8px hsl(0, 0%, 18%);\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    display: inline-block;\n    font-style: normal;\n    font-feature-settings: normal;\n    font-variant: normal;\n    text-rendering: auto;\n    line-height: 1;\n    &:hover{\n        background-color: hsl(161, 50%, 60%);\n        cursor: pointer;\n    }\n`;\n","import React, { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { toggleEditButton } from \"../feature/buttonSlice\";\nimport type { Product } from \"../product\";\nimport { RootState } from \"../app/store\";\nimport { Button } from '../util/Button';\n \nimport {\n  GridContainer,\n  FlexContainer,\n  InnerDiv,\n  FlexDiv,\n  LinkTag,\n  BigWhiteDiv,\n  Title,\n  TextMDiv,\n  Fab,\n  I\n} from './HomePage.styles';\n\nexport const HomePage: React.FunctionComponent<{\n  products: Product[];\n  onAddToCart: (product: Product) => void;\n  search: string;\n}> = ({ products, onAddToCart, search }) => {\n  const productsSelector = useSelector(\n    (state: RootState) => state.products.item\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const filteredProducts = useMemo(\n    () =>\n      (productsSelector ?? []).filter(\n        (product) =>\n          product.title\n            .includes(search) ||\n          product.description\n            .toLocaleLowerCase()\n            .includes(search)\n      ),\n    [productsSelector, search]\n  );\n\n  const handleAddForm = () => {\n    dispatch(toggleEditButton(true));\n    history.push(\"/form\")\n  }\n\n  let uuid = () => {\n    return (`[1e7]+-1e3+-4e3+-8e3+-1e11`).replace(/[018]/g, (c: any) =>\n      (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & 15) >> c / 4).toString(16)\n    );\n  }\n\n  const HPButton = Button({padding:\".8em 1.5em\", size:\"1.5em\"})\n  \n  return (\n    <GridContainer>\n      {filteredProducts?.map((product) => (\n        <LinkTag\n          to={`/detail/${product.id}`}\n          key={uuid()}\n        >\n          <Title>\n            {product.title}\n          </Title>\n          <BigWhiteDiv>\n            <FlexDiv>\n              <img src={product.image} alt={product.title} data-testid={`img-${product.id}`} />\n            </FlexDiv>\n            <BigWhiteDiv>\n              <FlexDiv>\n                {product.description}\n              </FlexDiv>\n              <FlexContainer>\n                <TextMDiv>{product.category}</TextMDiv>\n                <InnerDiv>\n                  {product?.price.toLocaleString(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                  })}\n                </InnerDiv>\n                <HPButton\n                  data-testid={`btn-${product.id}`}\n                  onClick={(evt: any) => {\n                    evt.preventDefault();\n                    onAddToCart(product);\n                  }}\n                >\n                  <I className=\"fas fa-cart-plus\"></I>\n                  Add To Cart\n                </HPButton>\n              </FlexContainer>\n            </BigWhiteDiv>\n          </BigWhiteDiv>\n        </LinkTag>\n      ))}\n      <footer>\n        <Fab onClick={handleAddForm}></Fab>\n      </footer>\n    </GridContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n           padding: 0.50rem;\n`;\n\nexport const GridDiv = styled.div`\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\n            gap: 2.5rem;\n            img, video {\n            max-width: 100%;\n            height: 322px;\n}\n        `;\n\nexport const FlexDiv = styled.div`\n            display: flex;\n            align-items: baseline;\n            margin-top: auto;\n            flex-flow: wrap;\n            width: 100%;\n            justify-content: center;\n        `;\n\nexport const FlexContainer = styled.div`\n            display: flex;\n            align-items: baseline;\n            margin-top: auto;\n            flex-flow: wrap;\n            width: 100%;\n            justify-content: center;\n        `;\n\n\n\nexport const FlexCart = styled.div`\n            display: flex;\n            flex-direction: column;\n            align-content: center;\n            justify-content: space-between;\n        `;\n\n\nexport const TextMDiv = styled.div`\n    position: relative;\n    height: calc(1.75rem * 3);\n    max-height: calc(1.75rem * 3);\n    overflow: hidden;\n    padding-right: 1rem;\n    font-size: 1.125rem;\n    line-height: 1.75rem;\n    text-overflow: ellipsis;\n    `;\n\nexport const InnerFlexDiv = styled.div`\n                display: flex;\n                align-items: baseline;\n                margin-top: auto;\n                flex-flow: wrap;\n                flex-direction: row;\n                margin-top: auto;\n                margin-top: 0.25rem;\n        `;\n\nexport const InnerDiv = styled.div`\n    font-size: 1.125rem;\n    line-height: 1.75rem;\n    text-align: right;\n    flex-grow: max(0.8);\n    justify-content: flex-end;\n    font-weight: 700;\n    margin-right: 1rem;\n    margin-top: 0.25rem;\n`;\n\n\nexport const Title = styled.h3`\n    font-weight: bold;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    flex-grow: max(0.8);    \n    margin-top: 1rem;  \n    margin-left: 1rem; \n`;\n\nexport const I = styled.i`\n    margin-right: 0.5rem;\n`;\n\n\nexport const Img = styled.img`\n    margin-right: 0.5rem;\n    max-width: 30%;\n    height: 322px;\n    display: flex;\n    vertical-align: middle;\n    height: 2rem;\n`;","import React, { useMemo, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport type { Product } from \"../product\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../app/store\";\nimport { DeleteProduct } from \"../feature/productSlice\";\nimport { toggleSaveButton } from \"../feature/buttonSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '../util/Button';\n\nimport {\n    MainDiv,\n    GridDiv,\n    FlexContainer,\n    FlexCart,\n    FlexDiv,\n    InnerFlexDiv,\n    InnerDiv,\n    Title,\n    TextMDiv,\n    Img,\n    I\n  } from './ProductDetail.styles';\n\nexport const ProductDetail: React.FunctionComponent<{\n    products: Product[];\n    onAddToCart: (product: Product) => void;\n}> = ({ products, onAddToCart}) => {\n    const { id } = useParams<{id: string; }>();\n    const productsSelector = useSelector(\n        (state: RootState) => state.products.item\n      );\n     \n    const dispatch = useDispatch();\n    const product = useMemo(\n        () => (productsSelector ?? []).find((p) => p.id === parseInt(id)),\n        [productsSelector, id]\n    );\n    const history = useHistory();\n        const [isDisabled] = useState(false);\n        \n        const handleAddForm = () => {\n          dispatch(toggleSaveButton(true));\n            history.push({\n                pathname: '/form',\n                search: `?id=${parseInt(id)}`,\n                state: {product} \n              })\n        }\n\n        const PDButton = Button({padding:\".7em 1.3em\", size:\"1.3em\"})\n\n\n    return (\n        <MainDiv>\n        {product && (\n        <>\n            <Title>\n            {product.title}\n            </Title>\n            <GridDiv>\n            <FlexDiv>\n                <Img\n                src={product.image}\n                alt={product.title}\n                />\n            </FlexDiv>\n            <FlexCart>\n                <div>\n                <TextMDiv>\n                    {product.description}\n                </TextMDiv>\n                <InnerFlexDiv>\n                    <div className=\"text-md mt-1\">{product.category}</div>\n            <InnerDiv>\n                {product?.price.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                    })}\n            </InnerDiv>\n                    <PDButton\n                    data-testid=\"detail-btn\"\n                    onClick={(evt) => {\n                        evt.preventDefault();\n                        onAddToCart(product);\n                    }}\n                    >\n                    <I className=\"fas fa-cart-plus\"></I>\n                    Add To Cart\n                    </PDButton>\n                </InnerFlexDiv>\n                <FlexContainer> \n                <PDButton  onClick={() => {\n                    dispatch(\n                        DeleteProduct({...product, id: product.id})\n                    );\n                    history.push(\"/\");\n                    }} className=\"btn\">Delete</PDButton>\n                <PDButton disabled={isDisabled}\n                    onClick={handleAddForm} type=\"submit\" >Edit</PDButton>\n                </FlexContainer>\n                </div>\n            </FlexCart>\n            </GridDiv>\n        </>\n        )}\n    </MainDiv>\n    );\n};\n","import styled, {css, FlattenSimpleInterpolation, ThemedStyledProps, ThemeProps} from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport type { Product } from \"../product\";\nimport { DetailedHTMLProps, HTMLAttributes } from 'react';\nimport { mobile } from \"../responsive\";\n\nexport const HeaderContainer = styled.div`\nmargin-top: 0.1rem;\nmargin-left: auto;\nmargin-right: auto;\nmargin-bottom: 1rem;\nfont-weight: bold;\ntext-decoration-line: none;\nbackground-color: rgb(50, 53, 53);\ndisplay: flex;\nflex-wrap: wrap;\nmin-width: 360px;\nborder-bottom: 2px solid rgb(70, 67, 67);\n${mobile({ gridTemplateColumns: \"repeat(1, minmax(0, 1fr))\", flexGrow: \"max(0,.5)\", fontWeight:\"bold\", paddingTeft: \"0rem\", paddingTop: \"1.5rem\", fontSize: \"0.8rem\" })}\n`;\n\n\nconst ItemCountContainer0 = css`\n  color: #e5ff00;\n`;\n\nconst ItemCountContainer1 = css`\n  color: green;\n`;\nconst getCountStyles = ( itemCount: any ): FlattenSimpleInterpolation => {\n  return parseInt(itemCount.children) === 0 ? ItemCountContainer0 : ItemCountContainer1;\n};\n\n\n\nexport const NotificationsSpan = styled.span`\n    width: 2rem;\n    height: 2rem;\n    margin-right: 1rem;\n    margin-top: 1rem;\n    border: 6px rgb(235, 219, 50) solid;\n    border-radius: 50%;\n    background-color: #212724;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    ${getCountStyles}\n\n`;\n\n\nexport const Title = styled.h3`\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    flex-grow: max(0.8);      \n      \n`;\n\n\nexport const I = styled.i`\n\n  margin-right: .6rem;\n\n`;\n\n    \n\nexport const SearchContainer = styled.div`\n    font-size: 1.6rem;\n    line-height: 2rem;\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n`;\n\nexport const FlexGrowDiv = styled.div`\n  flex-grow: max(0.8);\n`;\n\nexport const TooltipSpan = styled.span`\n        padding-left: 0.5rem;\n        padding-right: 0.5rem;\n        padding-top: 0.5rem;\n        padding-bottom: 0.5rem;\n        justify-content: flex-end;\n        visibility: hidden;\n        position: absolute;\n        font-size: medium;\n        width: 20rem;\n        margin-top: 2.4rem;\n        margin-left: -19rem;\n        background: rgb(77, 120, 95);\n        padding: 0.5rem;\n        color: rgb(51, 48, 48);\n        border: 1px solid black;\n`;\n\nexport const TooltipDiv = styled.div`\n        background-image: initial;\n        background-color: gb(107, 160, 119);\n        color: rgb(232, 230, 227);\n        border-color: rgb(212, 201, 184);\n        font-size: medium;\n        margin-right: 1.6rem;\n        \n        &:hover ${TooltipSpan}{\n          z-index: 10;\n          visibility: visible;\n          img{\n            width: 18%;\n            height: 18%;\n        }\n        }\n        .cart-icon {\n          font-size: 1.3rem;\n          margin-top: .1rem;\n          img{\n            width: 18%;\n            height: 18%;\n        }\n      }\n\n`;\n\n\n\n\nexport const Cart = styled.div`\n        background-image: initial;\n        background-color: gb(107, 160, 119);\n        color: rgb(232, 230, 227);\n        border-color: rgb(212, 201, 184);\n        font-size: medium;\n`;\n\n\n\nexport const FlexDiv = styled.div`\n    display: flex;\n    align-items: baseline;\n    margin-top: auto;\n    flex-flow: wrap;\n    flex-direction: row;\n    margin-top: auto;\n    flex-grow: 1;\n    `;\n\n    export const CartIcon = styled.div`\n            font-size: 1.3rem;\n            margin-top: .1rem;\n    `;\n        \n    export const InnerDiv = styled.div`\n    display: flex;\n    align-items: baseline;\n    margin-top: auto;\n    flex-flow: wrap;\n    flex-direction: row;\n    margin-top: auto;\n`;\n\nexport const Div = styled.div`\n    font-weight: bold;\n    flex-grow: max(0.8);\n    margin-left: auto;\n    justify-content: flex-end;\n    font-size: 1.2rem;\n`;\n\n\nexport const Input = styled.input`\n      padding: .5rem;\n      margin-left: 1rem;\n      margin-top: .5rem;\n      margin-bottom: .5rem;\n      border-top-left-radius: 0.5rem;\n      border-top-right-radius: 0.5rem;\n      min-width: 40%;\n      border-radius: 10px;\n`;\n\nexport const Img = styled.img`\n    margin-right: 0.5rem;\n    max-width: 30%;\n    height: 322px;\n    display: flex;\n    vertical-align: middle;\n    height: 2rem;\n`;","import React, { useMemo, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { Product } from \"../product\";\nimport { Button } from '../util/Button';\n\n\nimport {\n    HeaderContainer,\n    NotificationsSpan,\n    SearchContainer,\n    FlexDiv,\n    TooltipDiv,\n    TooltipSpan,\n    Input,\n    Title,\n    Img,\n    InnerDiv,\n    Div,\n    I\n  } from './Header.styles';\n\nexport const Header: React.FunctionComponent<{\n    cart: Product[];\n    onClearCart: () => void;\n    search: string;\n    onSetSearch: (search: string) => void;\n}> = ({ cart, onClearCart, search, onSetSearch }) => {\n    const total = useMemo(\n    () => (cart ? cart.reduce((total, p) => total + Number(p.price), 0) : 0),\n    [cart]\n    );\n  \n\n  const inputRef = useRef<any>(null);\n      useEffect(() => {\n        inputRef.current.focus();\n      }, [])\n\n  let uuid = () => {\n    return (`[1e7]+-1e3+-4e3+-8e3+-1e11`).replace(/[018]/g, (c: any) =>\n      (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & 15) >> c / 4).toString(16)\n    );\n  }\n\n  const CartButton = Button({padding: \".6em 1em\", size:\".8em\"})\n\n\n  const itemCount: number = (cart ?? []).length;\n  \nreturn (\n    <HeaderContainer>\n    <SearchContainer onClick={()=>onSetSearch(\"\")}>\n        <Link to=\"/\" data-testid=\"header\">\n        <I className=\"fas fa-shopping-basket\"></I>\n        Grocery Store\n        </Link>\n    </SearchContainer>\n    <FlexDiv>\n    <Div>\n        <Input\n        ref={inputRef as any}\n        type=\"text\"\n        placeholder=\"Search..\"\n        value={search}\n        onChange={(evt) => onSetSearch(evt.target.value)}\n        \n        />\n    </Div>\n    <TooltipDiv>\n        <TooltipSpan>\n        <div>Cart ({(cart ?? []).length})</div>\n        {cart?.map((product, index) => (\n        <InnerDiv key={uuid()}>\n            <Img src={product.image} alt={product.title}/>\n            <Title>{product.title}</Title>\n            <div>\n                {product.price.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                })}\n            </div>\n        </InnerDiv>\n        ))}\n        <FlexDiv>\n            <CartButton\n            data-testid=\"shopping-cart-btn\"\n            onClick={onClearCart}\n            >\n            Clear Cart\n            </CartButton>\n            <Div>\n            {total.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n            })}\n            </Div>\n        </FlexDiv>\n        </TooltipSpan>\n        <div id=\"cart-total\" data-testid=\"Cart\">\n        \n        <NotificationsSpan data-testid=\"cart-total\" >{itemCount}</NotificationsSpan>\n        </div>\n    </TooltipDiv>\n    </FlexDiv>\n    </HeaderContainer>\n);\n};","import styled from 'styled-components';\n\nexport const MainContainerForm = styled.form`\n            margin: 2rem auto;\n            max-width: 60rem;\n            \n        `;\n\nexport const FormBoxDiv = styled.div`\n            padding: 0.5rem 0;\n            display: flex;\n            flex-direction: column;\n            align-items: stretch;\n            margin-top: 1rem;\n        & select, option, input, label{\n                font-size: 1.2rem;\n                color: inherit;\n            }\n        & label{\n                /* display: none; */\n                flex-basis: 50%;\n            }\n        & [data-tooltip]:before {            \n                position: absolute;\n                content: attr(data-tooltip);\n                opacity: 0;\n                margin: -2rem 0rem;\n                color: rgb(71, 71, 69);\n    }\n\n            & [data-tooltip]:hover:before {        \n                opacity : 1;\n            }\n            @media all and (min-width: 500px){\n                        & label{\n                            display: block;\n                        }\n                    }\n\n            @media all and (min-width: 680px){\n                flex-direction: row;\n                margin-left: 3rem;\n                margin-right: 3rem;\n                \n                & label{\n                    flex-basis: 6rem;\n                    flex-shrink: 0;\n                }\n                & input,\n                & select,\n                & textarea{\n                    flex-grow: 1;\n                    flex-shrink: 1;\n                }\n            }\n        `;\n\nexport const FlexContainer = styled.div`\n            display: flex;\n            align-content: center;\n            flex-wrap: wrap;\n            justify-content: center;\n            align-items: center;\n            margin-top: 1rem;\n        `;\n\nexport const Error = styled.p`\n            margin: 1rem auto;\n            text-align: center;\n        `;\n\nexport const TextArea = styled.textarea`\n            margin-top: 1rem;\n            text-align: center;\n            height: 6rem;\n            color: rgb(32, 30, 30);\n        `;\n\nexport const HeaderDiv = styled.div`\n        margin-top: 0.1rem;\n        font-weight: bold;\n        text-decoration-line: none;\n        padding: 2rem;\n        background-color: rgb(50, 53, 53);\n        display: flex;\n        flex-wrap: wrap;\n        margin-left: 1rem;\n        margin-right: 1rem;\n        min-width: 260px;\n        border-bottom: 2px solid rgb(70, 67, 67);\n        & h1 {\n            font-size: 2.25rem;\n            color: white;\n            background-color: transparent;\n            text-decoration: none;\n            color: aliceblue;\n}\n        `;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../app/store\";\nimport { AddProduct, UpdateProduct, DeleteProduct } from \"../feature/productSlice\";\nimport type { Product } from \"../product\";\nimport { Button } from '../util/Button';\nimport {\n  MainContainerForm,\n  FormBoxDiv,\n  FlexContainer,\n  Error,\n  TextArea,\n} from './Form.styles';\n//import \"./form.css\";\n\nfunction Form() {\n    const id = useLocation().search.split('=')[1];\n    const productsSelector = useSelector(\n      (state: RootState) => state.products.item.find((item: Product)=>{\n        return item.id === parseInt(id)\n    \n      })\n    );\n  \n      const inputRef = useRef<any>(null);\n      useEffect(() => {\n        inputRef.current.focus();\n      }, [])\n\n    const initialData: Product = {\n      id: '',\n      image: \"\",\n      price: '',\n      title: \"\",\n      category: \"\",\n      description: \"\"\n    }\n    \n    let uuid = () => {\n      return (crypto.getRandomValues(new Uint8Array(8))).toString().replace(/,/g, '').substr(1,16);\n    \n    }\n\n    const {save, edit} = useSelector(\n      (state: RootState) => state.buttonReducer.toggle\n    );\n\n    const [ errorMessage, setErrorMessage ] = useState('');\n\n    const [ data, setData ] = useState(productsSelector || initialData);\n    const dispatch = useDispatch();\n    const handleInputChange = (e: any) => {\n      const { name, value } = e.target\n      setData({\n          ...data,\n          [name]: value\n      })\n    }\n    \n    const onSubmit = async (e: React.FormEvent<EventTarget>, tag: number = 0) => {\n        e.preventDefault()\n        if(!data.image || !data.title || !data.category || !data.price) {\n          setErrorMessage(\"All Fields except description field are required\");\n          setTimeout(()=>{setErrorMessage(\"\");}, 2000)\n          return;\n        } \n        \n       if (tag === 1) {\n        data[\"id\"] = parseInt(uuid())\n        setData(data)\n\n         handeleAdd(data)\n         setData(initialData);\n       } else if (tag === 2) {\n        setData(data);\n        if (!data.id) return;\n        handeleUpdate(data)\n       } else if (tag === 3) {\n        if (data.id === 0 || !data.id) return;\n        handeleDelete(data)\n       }\n        //history.push(\"/\");\n    }\n\n    const handeleAdd = (data: Product) => {\n      dispatch(\n        AddProduct(data)\n      );\n    }\n\n    const handeleUpdate = (data: Product) => {\n      dispatch(\n        UpdateProduct(data)\n      );\n    }\n\n    const handeleDelete = (data: Product) => {\n      dispatch(\n        DeleteProduct(data)\n      );\n    }\n\n    const FormButton = Button({padding:\".7em 1.3em\", size:\"1.3em\"})\n   \n  return (\n    <main>\n    <MainContainerForm onSubmit={onSubmit}>\n      <FormBoxDiv>\n        <label data-tooltip=\"required field\" htmlFor=\"image\" >Image</label>\n        <input ref={inputRef as any} id=\"image\" name=\"image\" type=\"text\" value={data.image} onChange={(e)=>handleInputChange(e)}/>\n      </FormBoxDiv>\n      <FormBoxDiv>\n        <label data-tooltip=\"required field\" htmlFor=\"price\">Price</label>\n        <input id=\"price\" name=\"price\" type=\"text\" value={data.price} onChange={(e)=>handleInputChange(e)}/>\n      </FormBoxDiv>\n      <FormBoxDiv>\n        <label data-tooltip=\"required field\" htmlFor=\"title\">Title</label>\n        <input id=\"title\" name=\"title\" type=\"text\" value={data.title} onChange={(e)=>handleInputChange(e)}/>\n      </FormBoxDiv>\n      <FormBoxDiv>\n        <label data-tooltip=\"required field\" htmlFor=\"category\">Category</label>\n        <input id=\"category\" name=\"category\" type=\"text\" value={data.category} onChange={(e)=>handleInputChange(e)}/>\n      </FormBoxDiv>\n      <FormBoxDiv>\n        <label htmlFor=\"description\">Description</label>\n        <TextArea id=\"description\" name=\"description\" value={data.description} onChange={(e)=>handleInputChange(e)} ></TextArea>\n      </FormBoxDiv>\n      {errorMessage&&<Error>{errorMessage}</Error>}\n      <FlexContainer> \n      <FormButton  disabled={save}  style={{ display: save ? \"none\" : \"block\"}} type=\"submit\" onClick={(e)=>onSubmit(e, 1)}>Save</FormButton>\n      <FormButton disabled={edit}  style={{ display: edit ? \"none\" : \"block\"}} type=\"submit\" onClick={(e)=>onSubmit(e, 2)}>Update</FormButton>\n      {/* <button className=\"btn\" type=\"submit\" onClick={(e)=>onSubmit(e, 3)}>Delete</button> */}\n      </FlexContainer>\n    </MainContainerForm>\n    </main>\n  );\n}\nexport default Form;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\n*, ::before, ::after {\n  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);\n  --tw-ring-offset-width: 0px;\n  --tw-ring-offset-color: #fff;\n  --tw-ring-color: rgba(35, 231, 123, 0.5);\n  --tw-ring-offset-shadow: 0 0 #0000;\n  --tw-ring-shadow: 0 0 #0000;\n}\n\n*, ::before, ::after {\n  --tw-shadow: 0 0 #0000;\n}\n\n:root {\n  --darkreader-neutral-background: #131516;\n  --darkreader-neutral-text: #d8d4cf;\n  --cart-background: rgb(77, 120, 95);\n  --darkreader-selection-text: #e8e6e3;\n  --darkreader-selection-background: rgba(35, 231, 123, 0.5);\n}\n\n:selection {\n    background-color: #107a49 !important;\n    color: #e8e6e3 !important;\n}\n\n\n\tbody {\n\t\tfont-family: 'Open Sans Condensed';\n\t\tpadding: 2px 4px;\n\n\t\t@media screen and (max-width: 800px) {\n\t\t\tpadding: 5px;\n\t\t}\n\t}\n\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: black;\n\t}\n\n\t* {\n\t\tbox-sizing: border-box;\n\t}\n`;\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useLocalStorage } from \"react-use\";\nimport { Switch, Route, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { InjectProducts } from \"./feature/productSlice\";\nimport type { Product } from \"./product\";\nimport gproducts from \"./products.json\"\nimport { HomePage } from \"./components/HomePage\";\nimport { ProductDetail } from \"./components/ProductDetail\";\nimport { Header } from \"./components/Header\";\nimport  Form  from \"./components/Form\";\nimport { getProducts } from \"./lib/api\";\nimport { GlobalStyle } from './global.styles';\n\n\nfunction App() {\n  const [cart, setCart] = useLocalStorage<Product[]>(\"cart\", []);\n  const [products, setProducts] = useState<Product[]>([]);\n  \n  let result: Product[] = [];\n  const dispatch = useDispatch();\n  \n  useEffect(()=>{\n    const fetchData = async()=>{\n      result = await getProducts()\n      const seeds = result || gproducts;\n      console.log(\"result:\", result, gproducts, seeds)\n      setProducts(seeds)\n      dispatch(InjectProducts(seeds))\n\n      return () => {\n        setProducts([]); \n      };\n  }\n  fetchData()\n  }, [])\n\n\n  if(!products)  dispatch(InjectProducts(gproducts))\n   \n  const onAddToCart = useCallback(\n    (product: Product) => {\n      setCart([...(cart ?? []), product]);\n    },\n    [cart, setCart]\n  );\n  const onClearCart = useCallback(() => {\n    setCart([]);\n  }, [setCart]);\n\n  useEffect(() => {\n    onSetSearch('')\n  }, []);\n\n  const history = useHistory();\n  const location = useLocation();\n  const [search, setSearch] = useState(\"\");\n  const onSetSearch = useCallback(\n    (search: string) => {\n      setSearch(search);\n      if (location.pathname !== \"/\") {\n        history.push(\"/\");\n      }\n    },\n    [setSearch, history, location]\n  );\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Header\n      cart={cart ?? []}\n      onClearCart={onClearCart}\n      search={search}\n      onSetSearch={onSetSearch}\n      />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage\n            products={products}\n            onAddToCart={onAddToCart}\n            search={search}\n          />\n        </Route>\n        <Route path=\"/form\">\n          <Form />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <ProductDetail products={products} onAddToCart={onAddToCart}  />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport productReducer from \"../feature/productSlice\";\nimport buttonReducer from \"../feature/buttonSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    products: productReducer,\n    buttonReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\n    \nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}