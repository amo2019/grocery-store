{"version":3,"sources":["components/HomePage.tsx","components/ProductDetail.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","products","onAddToCart","search","filteredProducts","useMemo","filter","product","title","includes","description","toLocaleLowerCase","className","map","to","id","src","image","alt","category","price","toLocaleString","style","currency","onClick","evt","preventDefault","ProductDetail","useParams","find","p","parseInt","Header","cart","onClearCart","onSetSearch","total","reduce","type","placeholder","value","onChange","target","length","index","App","useLocalStorage","setCart","useState","setProducts","gsproducts","gproducts","console","log","useCallback","useEffect","history","useHistory","location","useLocation","setSearch","pathname","push","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2297a6c.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { Product } from \"../product\";\nimport \"./HomePage.css\";\n\nexport const HomePage: React.FunctionComponent<{\n  products: Product[];\n  onAddToCart: (product: Product) => void;\n  search: string;\n}> = ({ products, onAddToCart, search }) => {\n  const filteredProducts = useMemo(\n    () =>\n      (products ?? []).filter(\n        (product) =>\n          product.title\n            .includes(search) ||\n          product.description\n            .toLocaleLowerCase()\n            .includes(search)\n      ),\n    [products, search]\n  );\n\n  return (\n    <div className=\"grid-container\">\n      {filteredProducts.map((product) => (\n        <Link\n          to={`/detail/${product.id}`}\n          key={product.id}\n          className=\"flex-cart m-2 border border-1 border-green-600 rounded-t-lg bg-green-600\"\n        >\n          <h3 className=\"title font-bold truncate w-full max-w-full py-2 px-4 text-white\">\n            {product.title}\n          </h3>\n          <div className=\"bg-white p-3\">\n            <div className=\"w-full flex justify-center\">\n              <img src={product.image} alt={product.title} data-testid={`img-${product.id}`}/>\n            </div>\n            <div className=\"bg-white p-3\">\n              <div className=\"w-full flex justify-center\">\n                {product.description}\n              </div>\n              <div className=\"flex-container\">\n                <div className=\"text-md mt-1\">{product.category}</div>\n                <div className=\"text-lg text-right flex-grow justify-end mt-1 mr-4 font-bold\">\n                  {product.price.toLocaleString(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                  })}\n                </div>\n                <button\n                data-testid={`btn-${product.id}`}\n                  onClick={(evt) => {\n                    evt.preventDefault();\n                    onAddToCart(product);\n                  }}\n                  className=\"text-lg px-8 py-1 font-bold bg-green-800 text-white rounded-full\"\n                >\n                  <i className=\"fas fa-cart-plus mr-2\"></i>\n                  Add To Cart\n                </button>\n              </div>\n              </div>\n          </div>\n        </Link>\n      ))}\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport type { Product } from \"../product\";\n\nexport const ProductDetail: React.FunctionComponent<{\n    products: Product[];\n    onAddToCart: (product: Product) => void;\n}> = ({ products, onAddToCart}) => {\n    const { id } = useParams<{\n        id: string;\n}>();\n    const product = useMemo(\n        () => (products ?? []).find((p) => p.id === parseInt(id)),\n        [products, id]\n    );\n\n    return (\n        <div className=\"p-10\">\n        {product && (\n        <>\n            <h3 className=\"title font-bold text-3xl truncate w-full max-w-full mb-2\">\n            {product.title}\n            </h3>\n            <div className=\"grid grid-cols-2 gap-10\">\n            <div className=\"w-full flex justify-center\">\n                <img\n                src={product.image}\n                alt={product.title}\n                className=\"text-center\"\n                />\n            </div>\n            <div className=\"flex-cart\">\n                <div>\n                <div className=\"text-lg overflow-ellipsis description\">\n                    {product.description}\n                </div>\n                <div className=\"flex flex-row mt-2\">\n                    <div className=\"text-md mt-1\">{product.category}</div>\n            <div className=\"text-2xl text-right flex-grow justify-end mt-1 mr-4\">\n                {product?.price.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                    })}\n            </div>\n                    <button\n                    data-testid=\"detail-btn\"\n                    onClick={(evt) => {\n                        evt.preventDefault();\n                        onAddToCart(product);\n                    }}\n                    className=\"text-2xl px-8 py-1 font-bold bg-green-800 text-white rounded-full\"\n                    >\n                    <i className=\"fas fa-cart-plus mr-2\"></i>\n                    Add To Cart\n                    </button>\n                </div>\n                </div>\n            </div>\n            </div>\n        </>\n        )}\n    </div>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport type { Product } from \"../product\";\nimport \"./Header.css\";\n\nexport const Header: React.FunctionComponent<{\n    cart: Product[];\n    onClearCart: () => void;\n    search: string;\n    onSetSearch: (search: string) => void;\n}> = ({ cart, onClearCart, search, onSetSearch }) => {\n    const total = useMemo(\n    () => (cart ? cart.reduce((total, p) => total + p.price, 0) : 0),\n    [cart]\n    );\n\nreturn (\n    <div className=\"header\">\n    <div className=\"text-2xl px-10 py-2\">\n        <Link to=\"/\" data-testid=\"header\">\n        <i className=\"fas fa-shopping-basket mr-2\"></i>\n        Simple Grocery Store\n        </Link>\n    </div>\n    <div className=\"flex-grow\">\n        <input\n        type=\"text\"\n        placeholder=\"Search..\"\n        value={search}\n        onChange={(evt) => onSetSearch(evt.target.value)}\n        className=\"input p-2 text-xl  rounded-lg max-w-md w-96\"\n        />\n    </div>\n\n    <div className=\"px-10 py-2 justify-end has-tooltip cart-icon \">\n        <span className=\"tooltip cart\">\n        <div>Cart ({(cart ?? []).length})</div>\n        {cart?.map((product, index) => (\n        <div key={`${product.id}${index}`} className=\"flex flex-row my-2\">\n            <img src={product.image} alt={product.title} className=\"h-8 mr-2\" />\n            <h3 className=\"title text-md truncate flex-grow\">{product.title}</h3>\n            <div className=\"text-md text-right flex-grow justify-end ml-2\">\n                {product.price.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                })}\n            </div>\n            </div>\n        ))}\n        <div className=\"flex\">\n            <button\n            data-testid=\"shopping-cart-btn\"\n            onClick={onClearCart}\n            className=\"text-md px-8 py-1 font-bold bg-green-800 text-white rounded-full\"\n            >\n            Clear Cart\n            </button>\n            <div className=\"text-md text-right flex-grow justify-end ml-2\">\n            {total.toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n            })}\n            </div>\n        </div>\n        </span>\n        <div id=\"cart-total\" className=\"hint\" data-testid=\"Cart\">\n        \n        <span data-testid=\"cart-total\" className=\"notifications\" >{(cart ?? []).length}</span>\n        </div>\n    </div>\n    </div>\n);\n};","import { useEffect, useState, useCallback } from \"react\";\nimport { useLocalStorage } from \"react-use\";\nimport { Switch, Route, useHistory, useLocation } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport type { Product } from \"./product\";\nimport { HomePage } from \"./components/HomePage\";\nimport { ProductDetail } from \"./components/ProductDetail\";\nimport { Header } from \"./components/Header\";\nimport gproducts from \"./products.json\"\n\nfunction App() {\n  const [cart, setCart] = useLocalStorage<Product[]>(\"cart\", []);\n  const [products, setProducts] = useState<Product[]>([]);\n  let gsproducts: Product[] = gproducts;\n  console.log(\"gproducts: \", gproducts)\n  const onAddToCart = useCallback(\n    (product: Product) => {\n      setCart([...(cart ?? []), product]);\n    },\n    [cart, setCart]\n  );\n  const onClearCart = useCallback(() => {\n    setCart([]);\n  }, [setCart]);\n  //const setDefaultPruducts = (gsproducts)=>setProducts(gsproducts)\n  useEffect(() => {\n    setProducts(gsproducts)\n  }, []);\n\n  const history = useHistory();\n  const location = useLocation();\n  const [search, setSearch] = useState(\"\");\n  const onSetSearch = useCallback(\n    (search: string) => {\n      setSearch(search);\n      if (location.pathname !== \"/\") {\n        history.push(\"/\");\n      }\n    },\n    [setSearch, history, location]\n  );\n\n  return (\n    <div>\n      <Header\n      cart={cart ?? []}\n      onClearCart={onClearCart}\n      search={search}\n      onSetSearch={onSetSearch}\n      />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage\n            products={products}\n            onAddToCart={onAddToCart}\n            search={search}\n          />\n        </Route>\n        <Route path=\"/detail/:id\">\n          <ProductDetail products={products} onAddToCart={onAddToCart}  />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}